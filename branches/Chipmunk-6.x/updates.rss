<?xml version="1.0"?>
<rss version="2.0">
	<channel>
		<title>Chipmunk Physics Updates</title>
		<description>Updates and new developments with the Chipmunk Physics engine</description>
		<link>http://chipmunk-physics.com/</link>
		
		<item >
			<guid isPermaLink="true">39F9CDCE-E527-481F-BA29-847CB482C9A4</guid>
			<title>Chipmunk Physics 6.0.0</title>
			<description><![CDATA[
				<h2>Chipmunk Download:</h2>
				
				<p><a href="http://chipmunk-physics.net/release/Chipmunk-6.x/Chipmunk-6.0.0.tgz">Chipmunk Physics 6.0.0</a></p>
				<p><a href="http://chipmunk-physics.net/release/Chipmunk-6.x/Chipmunk-6.0.0-Docs/">Documentation</a></p>
				
				<h2>Chipmunk-Pro Download:</h2>
				
				<p>
					<a href="http://chipmunk-physics.net/release/chipmunkPro/Objective-Chipmunk-6.0.0.tgz">Objective-Chipmunk 6.0.0</a>
					<em>Requires you to <a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=GTWSJMXXSNJNN">purchase a login</a>.</em>
				</p>
				
				<p><a href="http://chipmunk-physics.net/release/Chipmunk-6.x/Objective-Chipmunk-6.0.0-Docs/">Objective-Chipmunk Module Documentation</a></p>
				
				<p>Chipmunk-Pro contains a number of paid enhancements to Chipmunk.
				Currently the main component is the Objective-C binding, but we are also working on auto-geometry generation from terrain images and sprites, multi-threading and Arm NEON optimizations.
				You can get early access to the auto-geometry and multithreading code now.</p>
				
				<p>You can get more information on Chipmunk-Pro <a href="http://chipmunk-physics.net/chipmunkPro.php">here</a>.!
				
				<h2>Release Notes:</h2>
				
				<p>Chipmunk 6.x's API is not quite 100% compatible with 5.x. Make sure you read the list of changes carefully.
				<p>
					Keep in mind that this is a x.0.0 release and that it's likely there are still some bugs I don't know about yet.
					I've spent a lot of effort rewritting the collision detection, sleeping, and contact graph algorithms that have required large changes and cleanup to the 5.x codebase.
					I've ironed out all the bugs that I know of, and the beta test went well. So it's finally time for 6!
				</p>
				
				<ul>
					     <li>API: Chipmunk now has hard runtime assertions that aren't disabled in release mode for many error conditions. Most people have been using release builds of Chipmunk during development and were missing out on very important error checking.
					</li><li>API: Access to the private API has been disabled by default now and much of the private API has changed. I've added official APIs for all the uses of the private API I knew of.
					</li><li>API: Added accessor functions for every property on every type. As Chipmunk's complexity has grown, it's become more difficult to ignore accessors. You are encouraged to use them, but are not required to.
					</li><li>API: Added cpSpaceEachBody() and cpSpaceEachShape() to iterate bodies/shapes in a space.
					</li><li>API: Added cpSpaceReindexShapesForBody() to reindex all the shapes attached to a particular body.
					</li><li>API: Added a 'data' pointer to spaces now too.
					</li><li>API: cpSpace.staticBody is a pointer to the static body instead of a static reference.
					</li><li>API: The globals cp_bias_coef, cp_collision_slop, cp_contact_persistence have been moved to properties of a space. (collisionBias, collisionSlop, collisionPersistence respectively)
					</li><li>API: Added cpBodyActivateStatic() to wake up bodies touching a static body with an optional shape filter parameter.
					</li><li>API: Added cpBodyEachShape() and cpBodyEachConstraint() iterators to iterate the active shapes/constraints attached to a body.
					</li><li>API: Added cpBodyEeachArbiter() to iterate the collision pairs a body is involved in. This makes it easy to perform grounding checks or find how much collision force is being applied to an object.
					</li><li>API: The error correction applied by the collision bias and joint bias is now timestep independent and the units have completely changed.
					</li><li>FIX: Units of damping for springs are correct regardless of the number of iterations. Previously they were only correct if you had 1 or 2 iterations.
					</li><li>MISC: Numerous changes to help make Chipmunk work better with variable timesteps. Use of constant timesteps is still highly recommended, but it is now easier to change the time scale without introducing artifacts.
					</li><li>MISC: Performance! Chipmunk 6 should be way faster than Chipmunk 5 for almost any game.
					</li><li>MISC: Chipmunk supports multiple spatial indexes and uses a bounding box tree similar to the one found in the Bullet physics library by default. This should provide much better performance for scenes with objects of differening size and works without any tuning for any scale.
				</li></ul>
			]]></description>
		</item>
		
		<item >
			<guid isPermaLink="true">B4935895-1CB7-48B1-9115-BE42A855040B</guid>
			<title>Chipmunk Physics 5.3.5</title>
			<description><![CDATA[
				<h2>Chipmunk Download:</h2>
				
				<p><a href="http://chipmunk-physics.net/release/Chipmunk-5.x/Chipmunk-5.3.5.tgz">Chipmunk Physics 5.3.5</a></p>
				<p><a href="http://chipmunk-physics.net/release/Chipmunk-5.x/Chipmunk-5.3.5-Docs/">Documentation</a></p>
				
				<h2>Chipmunk-Pro Download:</h2>
				
				<p>
					<a href="http://chipmunk-physics.net/release/chipmunkPro/Objective-Chipmunk-5.3.5.tgz">Objective-Chipmunk 5.3.5</a>
					<em>Requires you to <a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=GTWSJMXXSNJNN">purchase a login</a>.</em>
				</p>
				
				<p><a href="http://chipmunk-physics.net/release/Chipmunk-5.x/Objective-Chipmunk-5.3.5-Docs/">Objective-Chipmunk Module Documentation</a></p>
				
				<p>Chipmunk-Pro contains a number of paid enhancements to Chipmunk.
				Currently the main component is the Objective-C binding, but we are also working on auto-geometry generation from terrain images and sprites, multi-threading and Arm NEON optimizations.
				You can get early access to the auto-geometry and multithreading code now.</p>
				
				<p>You can get more information on Chipmunk-Pro <a href="http://chipmunk-physics.net/chipmunkPro.php">here</a>.!
				
				<h2>Release Notes:</h2>
				
				<p>This was a minor bug fix update.</p>
				
				<ul>
					<li>FIX: Fixed spelling of cpArbiterGetDepth(). Was cpArbiteGetDepth() before. Apparently nobody ever used this function.</li>
					<li>FIX: Added defines for M_PI and M_E. Apparently these values were never part of the C standard math library. Who knew!?</li>
					<li>FIX: Added a guard to cpBodyActivate() so that it's a noop for rouge bodies.</li>
					<li>FIX: Shape queries now work with (and against) sensor shapes.</li>
					<li>FIX: Fixed an issue where removing a collision handler while a separate() callback was waiting to fire the next step would cause crashes.</li>
					<li>FIX: Fixed an issue where the default callback would not be called for sensor shapes.</li>
					<li>FIX: Resetting or applying forces or impulses on a body causes it to wake up now.</li>
					<li>MISC: Added a check that a space was not locked when adding or removing a callback.</li>
					<li>MISC: Removed cpmalloc from the API and replaced all occurences with cpcalloc.</li>
					<li>MISC: Added a benchmarking mode to the demo app. -trial runs it in time trial mode and -bench makes it run some benchmarking demos.</li>
				</ul>
			]]></description>
		</item>
	</channel>
</rss>